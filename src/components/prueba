import React, { useState, useEffect } from 'react';
import Button from 'react-bootstrap/Button';
import Modal from 'react-bootstrap/Modal';
import Card from 'react-bootstrap/Card';
import Table from 'react-bootstrap/Table';
import { productHandler } from '../handlers/productHandler';
import { useParams} from 'react-router';





const Modalproduct = () => {


  const { id } = useParams();
  const [product, setProduct] = useState([]);
 
  useEffect(() => {
    async function fetchProduct() {
      const productData = await productHandler.loadProduct(id);
      setProduct(productData);
    }
    fetchProduct();
  }, [id]);

  // const deleteImage = async (id) => {
  //   setImage(image.filter((i) => i.id !== id));
  //   await ImageHandler.deleteImage(id);
  // };

console.log(product)
  let productInfo = product;



  return (

    <>
    {productInfo.map((p) => (
      <div key={p.id}
        className="modal show"
        style={{ display: 'block', position: 'initial', backgroundColor: "rgba(135, 135, 135, 0.5)" }}
      >
        <Modal.Dialog size='lg'>
          <Modal.Header style={{ backgroundColor: "rgba(135, 135, 135)" }}>
            <Modal.Title style={{ backgroundColor: "rgba(135, 135, 135)", color: "white" }}>{p.productName}</Modal.Title>
          </Modal.Header>
          {/* <Modal.Body>
            <img src={i.imageSource} style={{ height: "100%", width: "100%" }} />
          </Modal.Body>

          <Modal.Body>
            <p>{i.category}</p>
          </Modal.Body>

          <Modal.Footer style={{ backgroundColor: "rgba(135, 135, 135)" }}>
            <Link to={`/editImage/${i.id}`}><Button variant="secondary" style={{ backgroundColor: "#d63384" }}>Edit</Button></Link>
            <Link to={"/gallery"}><Button variant="secondary" style={{ backgroundColor: "#d63384" }}>Gallery</Button></Link>
            <Link to={"/gallery"}><Button variant="secondary" style={{ backgroundColor: "#d63384" }} onClick={() => deleteImage(i.id)}>Delete</Button></Link>
          </Modal.Footer> */}
        </Modal.Dialog>
      </div>
    ))}
  </>
);
}



form de Hotbuy

const { product } = useLoaderData();
        
const id = product.id;
const [name, setName] = useState(product.name);
const [price, setPrice] = useState(product.price);
const [img, setImg] = useState(product.img);
const [category, setCategory] = useState(product.category);
const [productStatus, setProductStatus] = useState(product.productStatus);
const [unit, setUnit] = useState(product.unit);
const [description, setDescription] = useState(product.description);

const handleImgChange = (event) => {
    const file = event.target.files[0];
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = () => {
        setImg(reader.result);
    };
};

const handleNameChange = (event) => {
    let nameInput = event.target.value;
    setName(nameInput);
};
const handlePriceChange = (event) => {
    let priceInput = event.target.value;
    setPrice(priceInput);
};

const handleCategoryChange = (event) => {
    let categoryInput = event.target.value;
    setCategory(categoryInput);
};
const handleProductStatusChange = (event) => {
    let productStatusInput = event.target.value;
    setProductStatus(productStatusInput);
};
const handleUnitChange = (event) => {
    let unitInput = event.target.value;
    setUnit(unitInput);
};

const handleDescriptionChange = (event) => {
    let descriptionInput = event.target.value;
    setDescription(descriptionInput);
};

const handleSubmit = (event) => {
    event.preventDefault();
    let updatedProduct = {name, price, img, category, productStatus, unit, description};
    ProductHandler.updateProduct(id, updatedProduct);
};



const [showAlert, setShowAlert] = useState(false);

const handleAgregarClick = () => {
    setShowAlert(true);
}

const handleAlertClose = () => {
    setShowAlert(false);
}